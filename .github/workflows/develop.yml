name: Develop CI/CD

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:
  
jobs:
  check-and-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          cd saleor-api
          python -m pip install --upgrade pip
          pip install flake8 ruff pip-audit

      - name: Linting (flake8)
        run: flake8  . --ignore=E501,W503 || true

      - name: Static Code Analysis (Ruff)
        continue-on-error: true
        run: ruff check . | tee ruff-report.txt

      - name: Dependency Vulnerability Scan (pip-audit)
        run: pip-audit || true | tee pip-audit-report.txt

  build-and-deploy:
    name: Build and Deploy
    needs: check-and-lint
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_REPO: saleor
      DOCKERHUB_TAG: develop
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }} 

      - name: Build and Tag Saleor API Docker Image
        run: |
          docker buildx build --load -t "${{ secrets.DOCKERHUB_USERNAME }}/saleor-api:${{ env.DOCKERHUB_TAG }}" -f saleor-api/Dockerfile saleor-api
      - name: Build and Tag Saleor Dashboard Docker Image
        run: |
          docker buildx build --load -t "${{ secrets.DOCKERHUB_USERNAME }}/saleor-dashboard:${{ env.DOCKERHUB_TAG }}" -f saleor-dashboard/Dockerfile saleor-dashboard
        
      - name: Run Health Check on Saleor API
        run: |
          docker run --rm -d --name saleor-api -p 8000:8000 "${{ secrets.DOCKERHUB_USERNAME }}/saleor-api:${{ env.DOCKERHUB_TAG }}"
          sleep 10  # Wait for the container to start
          STATUS_CODE=$(curl -o /dev/null -s -w "%{http_code}" http://localhost:8000/health/)
          docker stop saleor-api
          if [[ "$STATUS_CODE" != "200" && "$STATUS_CODE" != "404" ]]; then
            echo "Health check failed with status: $STATUS_CODE"
            exit 1
          fi
        
      - name: Run Health Check on Saleor Dashboard
        run: |
          docker run --rm -d --name saleor-dashboard -p 9000:80 "${{ secrets.DOCKERHUB_USERNAME }}/saleor-dashboard:${{ env.DOCKERHUB_TAG }}"
          sleep 10  # Wait for the container to start
          STATUS_CODE=$(curl -o /dev/null -s -w "%{http_code}" http://localhost:9000/)
          docker stop saleor-dashboard
          if [[ "$STATUS_CODE" != "200" && "$STATUS_CODE" != "404" ]]; then
            echo "Health check failed with status: $STATUS_CODE"
            exit 1
          fi
      
      - name: Push Saleor API Docker Image
        run: |
          docker push "${{ secrets.DOCKERHUB_USERNAME }}/saleor-api:${{ env.DOCKERHUB_TAG }}"
      
      - name: Push Saleor Dashboard Docker Image
        run: |
          docker push "${{ secrets.DOCKERHUB_USERNAME }}/saleor-dashboard:${{ env.DOCKERHUB_TAG }}"

      - name: Trivy Scan Saleor API
        run: docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --severity HIGH,CRITICAL --ignore-unfixed --no-progress saleor-api || true