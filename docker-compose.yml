#version: '3.8'
services:
  db:
    image: postgres:15-alpine 
    ports:
      - "5432:5432"
    volumes:
      - saleor-db:/var/lib/postgresql/data
      - ./replica_user.sql:/docker-entrypoint-initdb.d/replica_user.sql
    environment:
      POSTGRES_DB: "saleor"
      POSTGRES_USER: "saleor"
      POSTGRES_PASSWORD: "saleor"
    networks:
      - saleor-backend-tier
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "saleor"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    networks:
      - saleor-backend-tier
    volumes:
      - saleor-redis:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
  jaeger:
    image: jaegertracing/all-in-one:1.20.0
    ports:
      - "16686:16686"
      - "6831:6831/udp"
    tmpfs:
      - /docker-imagelayers
    #depends_on:
    #  - api
    networks:
      - saleor-backend-tier
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:16686"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 30s
  mailpit:
    image: axllent/mailpit
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - saleor-backend-tier
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8025"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
  api:
    image: saleor-api
    build: 
      context: ./saleor-api
      dockerfile: ./Dockerfile
    ports:
    - "8000:8000"
    depends_on:
      - db
      - redis
      - jaeger
    volumes:
      - saleor-media:/app/
    environment:
      ALLOWED_HOSTS: "localhost, api, dashboard"
      DATABASE_URL: "postgres://saleor:saleor@db:5432/saleor"
      JAEGER_AGENT_HOST: "http://jaeger-agent:4317"
      REDIS_URL: "redis://redis:6379/0"
      DASHBOARD_URL: "http://localhost:9000"
    networks:
      - saleor-backend-tier
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  dashboard:
    image: saleor-dashboard
    build: 
      context: ./saleor-dashboard
      dockerfile: ./Dockerfile
    ports:
    - "9000:80"
    depends_on:
      - api
    environment:
      API_URI: "http://api:8000/graphql/"
    networks:
      - saleor-backend-tier
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  saleor-media:
  saleor-db:
  saleor-redis:
networks:
  saleor-backend-tier:
    driver: bridge